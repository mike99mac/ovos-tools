#!/bin/bash
#
# installneon - Install packages, etc. for the Neon personal voice assistant
#
#+--------------------------------------------------------------------------+
function usage
# Give help 
#+--------------------------------------------------------------------------+
 {
  : SOURCE: ${BASH_SOURCE}
  : STACK:  ${FUNCNAME[@]}

  echo
  echo "Name:  installneon - install Neon in a virtual environment"
  echo "Usage: installneon [OPTIONS]"
  echo ""
  echo "OPTIONS:"
  echo "  -h|--help         Give help (this screen)"
  echo "  -v|--verbose      Increase verbosity"
  echo "  -x|--debug        Print commands and arguments as they are executed"
  exit 51
 }                                         # usage()

#+--------------------------------------------------------------------------+
function parseArgs
# Parse arguments
# Args: All arguments passed in 
#+--------------------------------------------------------------------------+
 {
  : SOURCE: ${BASH_SOURCE}
  : STACK:  ${FUNCNAME[@]}

  while [ -n "$1" ]                        # loop through args passed in
  do
    case "$1" in
      -h|--help)
        usage
        ;;
      -v|--verbose)
        verbose=2
        ;;
      -x|--debug)                          # turn trace on
         set -vx
         ;;
      *)
        echo "ERROR: Unrecognized argument: $1"
        usage
        ;;
    esac
    shift
  done
 }                                         # parseArgs()

#+--------------------------------------------------------------------------+
function runCmd
# run a command, report time spent and exit if it failes
#+--------------------------------------------------------------------------+
 {
  : SOURCE: ${BASH_SOURCE}
  : STACK:  ${FUNCNAME[@]}

  local timeStamp=`date +"%y-%m-%d-%H-%M-%S"` 
  cmd="$@"                                 # get all args
  echo "$timeStamp - Running: $cmd ..."    # show the command and send to output file
  eval $cmd >> $logFile 2>&1               # run the command
  rc=$?
  if [ "$rc" != 0 ]; then                  # it failed
    echo "ERROR: $cmd returned $rc" 
    exit 1
  fi
 }                                         # runCmd()

#+--------------------------------------------------------------------------+
function addGroupsUsers
# Configure docker group and user
#+--------------------------------------------------------------------------+
 {
  : SOURCE: ${BASH_SOURCE}
  : STACK:  ${FUNCNAME[@]}

  getent group docker >/dev/null 2>&1
  if [ $? != 0 ]; then                     # group docker does not exist
    sudo groupadd -g $dockerGID docker
    if [ $? != 0 ]; then                   # cannot proceed
      echo "ERROR: sudo groupadd -g $dockerGID docker returned $? - exiting"
      exit 1
    fi
    id docker >/dev/null 2>&1
    if [ $? != 0 ]; then                     # user docker does not exist
      sudo useradd -g $dockerGID -u $dockerUID docker
      if [ $? != 0 ]; then                   # cannot proceed
        echo "ERROR: sudo useradd -g $dockerGID -u $dockerUID docker returned $? - exiting"
        exit 1
      fi
    fi
  fi
 }                                         # addGroupsUsers()

#+--------------------------------------------------------------------------+
function installNeon
# Do the work to install Neon 
#+--------------------------------------------------------------------------+
 {
  : SOURCE: ${BASH_SOURCE}
  : STACK:  ${FUNCNAME[@]}

  addGroupsUsers                           # add group and user 'docker'
  sudo apt install -y docker docker-compose
 }                                         # installNeon()

# main()
curPkg=0                                   # current package being installed
dockerUID=1017                             # change if UID 1017 is taken
dockerGID=1017                             # change if GID 1017 is taken
verbose=1                                  # verbosity

parseArgs $@                               # parse arguments
timeStamp=`date +"%y-%m-%d-%H-%M-%S"`      
logFile="$HOME/$timeStamp-installneon.out" # output file
echo "Running installneon ..." | tee $logFile
installNeon $@ | tee -a $logFile 2>&1     # send output to log file
let min=$SECONDS/60                        # show time spent installing
let sec=$SECONDS%60
if [ $sec -lt 10 ]; then                   # add a leading 0
  sec="0$sec"
fi
echo "Successfully installed Neon in $min:$sec" | tee -a $logFile
echo
echo "Log file: $logFile"

