#!/bin/bash
#
# startovos - start all OVOS processes
#
#+--------------------------------------------------------------------------+
function umountTmpfs
# Unmount a temporary file system if it is mounted
# Arg 1: file system to umount
#+--------------------------------------------------------------------------+
 {
  : SOURCE: ${BASH_SOURCE}
  : STACK:  ${FUNCNAME[@]}

  fileSystem=$1
  echo "Unmounting tmpfs file system $fileSystem..."
  fsType=`mount | grep $fileSystem | awk '{print $1}'` # check if it's mounted
  if [ "$fsType" = "tmpfs" ]; then
    sudo umount $fileSystem
  fi
 }                                         # umountTmpfs()

#+--------------------------------------------------------------------------+
function mountTmpfs
# Mount a file system in a tmpfs using systemd .mount files
# Arg 1: file system to mount 
# Arg 2: systemd .mount file 
#+--------------------------------------------------------------------------+
 {
  : SOURCE: ${BASH_SOURCE}
  : STACK:  ${FUNCNAME[@]}

  local mountDir=$1
  local mountFile=$1

  local mountDir=`echo $mountFile | sed 's:-:/:g'`
  local fsType=`mount | grep $mountDir | awk '{print $5}'`
  cmd="sudo systemctl start $mountFile"
  echo "making directory $mountDir a tmpfs with command: $cmd ..."
  eval $cmd
  rc=$?
  if [ "$rc" != 0 ]; then
    echo "WARNING $cmd returned $rc - proceeding without tmpfs $desc"
  else
    echo "$cmd was successful"
  fi
 }                                         # mountTmpfs()

#+--------------------------------------------------------------------------+
function startSystem
# Start OVOS base components
#+--------------------------------------------------------------------------+
 {
  : SOURCE: ${BASH_SOURCE}
  : STACK:  ${FUNCNAME[@]}

  echo "Starting OVOS ..."
 
  # unmount and remount tmpfs over log files
  umountTmpfs $HOME/.local/state/mycroft
  mountTmpfs $HOME/.local/state/mycroft /etc/systemctl/system/home-pi-.local-state-mycroft.mount 
  sleep 1                                  # dont start services too soon

  # launch all services 
  echo "Starting ovos-phal-admin ..."
  sudo systemctl start ovos-phal-admin
  echo "Starting ovos-core ..."
  systemctl --user start ovos-core.service
  echo "Starting ovos-listener ..."
  systemctl --user start ovos-listener.service
  echo "Starting ovos-messagebus ..."
  systemctl --user start ovos-messagebus.service
  echo "Starting ovos-phal ..."
  systemctl --user start ovos-phal.service
  echo "Starting ovos-media ..."
  systemctl --user start ovos-media.service
  echo "Starting ovos-audio ..."
  systemctl --user start ovos-audio.service

  OVOSprocs=`ps -ef | grep ovos | grep -v grep | grep -v startovos` 
  if [ ${#OVOSprocs} = 0 ]; then
    echo "OVOS appears to be down"
  else
    echo "Found OVSO processes:"
    echo "$OVOSprocs"
  fi
 }                                         # startSystem()

# main()
logDir="$HOME/.local/state/mycroft"
if [ ! -d $baseDir ]; then                 # dir not found
  echo "ERROR: log directory $logDir not found"
  exit 1
fi

startSystem
cd $baseDir
source $HOME/.venvs/ovos/bin/activate 

